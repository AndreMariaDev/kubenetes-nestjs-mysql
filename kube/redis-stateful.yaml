apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: redis
spec:
  serviceName: redis-cluster
  replicas: 1
  selector:
    matchLabels:
      app: redis-cluster
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
        - name: redis
          image: redis:alpine
          ports:
            - containerPort: 6379
          env:
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: env
            - name: REDIS_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PASSWORD
                  name: env
            - name: REDIS_USE_TLS
              valueFrom:
                configMapKeyRef:
                  key: REDIS_USE_TLS
                  name: env
            - name: CACHE_SHORT_PERIOD
              valueFrom:
                configMapKeyRef:
                  key: CACHE_SHORT_PERIOD
                  name: env
            - name: CACHE_LONG_PERIOD
              valueFrom:
                configMapKeyRef:
                  key: CACHE_LONG_PERIOD
                  name: env
          resources: {}
          stdin: true
          tty: true
          volumeMounts:
            - mountPath: /src
              name: app-claim0
      restartPolicy: Always
      volumes:
        - name: app-claim0
          persistentVolumeClaim:
            claimName: app-claim0
status: {}
