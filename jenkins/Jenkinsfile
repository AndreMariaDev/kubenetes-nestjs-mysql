pipeline {

  environment {
    dockerimagename = "andremaria1980/jenkins"
    dockerImage = ""
  }

  agent any

  stages {

    stage('Checkout Source') {
      steps {
        git url:'https://github.com/AndreMariaDev/kubenetes-nestjs-mysql.git', branch: 'main', credentialsId: '73a6300e-fe00-4272-8e6f-b6d3ac373eb0'
      }
    }

    stage('Build image') {
      steps{
        script {
          dockerImage = docker.build dockerimagename
        }
      }
    }

    stage('Pushing Image') {
      environment {
               registryCredential = 'dockerhublogin'
           }
      steps{
        script {
          docker.withRegistry( 'https://registry.hub.docker.com', registryCredential ) {
            dockerImage.push("latest")
          }
        }
      }
    }

    stage('Deploying App to Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "kube/env-configmap.yaml", kubeconfigId: "kubernetes")
          kubernetesDeploy(configs: "kube/static-files-persistentvolumeclaim.yaml", kubeconfigId: "kubernetes")
          kubernetesDeploy(configs: "kube/mysqldbkube-deployment.yaml", kubeconfigId: "kubernetes")
          kubernetesDeploy(configs: "kube/mysqldbkube-service.yaml", kubeconfigId: "kubernetes")
          kubernetesDeploy(configs: "kube/db-persistentvolumeclaim.yaml", kubeconfigId: "kubernetes")
          kubernetesDeploy(configs: "kube/app-claim0-persistentvolumeclaim.yaml", kubeconfigId: "kubernetes")
          kubernetesDeploy(configs: "kube/app-deployment.yaml", kubeconfigId: "kubernetes")
          kubernetesDeploy(configs: "kube/app-service.yaml", kubeconfigId: "kubernetes")
        }
      }
    }

  }

}